stages:
  - Format
  - Test
  - Release

check-isort:
  stage: Format
  image: registry.cern.ch/docker.io/library/python:3.11
  before_script:
    - pip install --upgrade pip
    - pip install wheel==0.45.1
    - pip install isort==5.13
  script:
    - isort --profile black -c ./bagit_create

check-black:
  stage: Format
  image: registry.cern.ch/docker.io/library/python:3.11
  before_script:
    - pip install --upgrade pip
    - pip install black==24.10
  script:
    - black ./bagit_create --check

test:
  stage: Test
  image: $IMAGE
  parallel:
    matrix:
      - IMAGE: ["registry.cern.ch/docker.io/library/python:3.9", "registry.cern.ch/docker.io/library/python:3.10", "registry.cern.ch/docker.io/library/python:3.11"]
  script:
    - pip install -e .
    - pip install pytest oais_utils==0.0.6
    - INDICO_KEY="$INDICO_KEY" GITLAB_KEY="$GITLAB_KEY" python -m pytest -s --junitxml=path
  artifacts:
    when: always
    reports:
      junit: ./report.xml

pypi:
  stage: Release
  image: registry.cern.ch/docker.io/library/python:3.11
  script:
    - pip install -U setuptools twine
    - python setup.py sdist
    - twine upload dist/*
  only:
    - tags
